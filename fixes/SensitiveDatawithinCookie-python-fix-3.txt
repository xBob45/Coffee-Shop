#src/auxiliary/custom_decorators.py
@wraps(func)
def decorated_view(*args, **kwargs):
    try:
        #Only authenticated users with role 'admin' can access admin panel
        if current_user.is_authenticated:
            if current_user.roles.name == 'admin':
                log_config.logger.info("User %s accessed the admin panel." % bleach.clean(current_user.username), extra={'ip_address': request.remote_addr})
                return func(*args, **kwargs) #If everything is OK, let user proceed.
            else:
                log_config.logger.error("User tried to access the admin panel and failed as a result of insufficient privileges.", extra={'ip_address': request.remote_addr})
                raise Forbidden()
        return redirect(url_for('auth.login'))
    except Forbidden:
        abort(403)
    except Exception as e:
        log_config.logger.error("Error occurred while accessing admin panel. Exception: %s" % e, extra={'ip_address': request.remote_addr})
        abort(400)