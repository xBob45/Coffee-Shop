#src/controllers/accountController.py
def update_user():
    if request.method == 'POST':
        try:
            validate_csrf(request.form.get('csrf_token'))
            #IDOR-4 - START
            #IDOR-4 - END
            username = request.form.get("edit_username")
            email = request.form.get("edit_email")
            first_name = request.form.get("edit_fn")
            last_name = request.form.get("edit_ln")
            password = request.form.get("edit_password")

            user = User.query.filter_by(id=id).first()
            current_username = user.username
            current_email = user.email
            if current_username != username:
                #Function compares user input against allowed pattern.
                input_validation(username, "Username")
                check_if_exists('username', username, 'Username')
                user.username = username
            if current_email != email:
                #Function compares user input against allowed pattern.
                email_validation(email)
                check_if_exists('email', email, 'Email')
                user.email = email 
            user.first_name = first_name
            #Function compares user input against allowed pattern.
            input_validation(user.first_name, "First Name")
            user.last_name = last_name
            #Function compares user input against allowed pattern.
            input_validation(user.last_name, "Last Name")
            if password == '':
                pass
            else:
                #WeakPasswordRequirements-3 - START
                #WeakPasswordRequirements-3 - END
                #CompleteOmissionOfHashFunction-1 - START
                #CompleteOmissionOfHashFunction-1 - END
                #WeakHashFunction-1 - START
                #WeakHashFunction-1 - END
                #WeakHashFunctionWithSalt-1 - START
                #WeakHashFunctionWithSalt-1 - END 
                user.password = password
            db.session.commit()
            log_config.logger.info("User with username %s was sucessfully updated." %  bleach.clean(username), extra={'ip_address': request.remote_addr})
            flash("User has been updated.", 'success')
            return redirect(request.referrer)
        except ValidationError:
            log_config.logger.error("User was not updated. Missing or invalid CSRF token.", extra={'ip_address': request.remote_addr})
            abort(400)
        except ValueError:
            return redirect(request.referrer)
        except Exception as e:
            log_config.logger.error("User was not successfully updated. Exception: %s" % e, extra={'ip_address': request.remote_addr})
            flash("Error occured, try again.", 'danger')
            return redirect(request.referrer)     
    return redirect(request.referrer)  